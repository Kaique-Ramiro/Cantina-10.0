<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NMIAAAAASUVORK5CYII=
</value>
  </data>
</root>