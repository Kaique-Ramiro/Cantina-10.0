<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>